{"ast":null,"code":"var _jsxFileName = \"/Users/kiranpanchal/Desktop/Coding/React/portfolio-app/src/Experience.js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Experience(props) {\n  let experince = props.content;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: experince.map((el, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: el.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: el.companyLogo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true))\n  }, void 0, false);\n}\n_c = Experience;\nvar _c;\n$RefreshReg$(_c, \"Experience\");","map":{"version":3,"names":["Experience","props","experince","content","_jsxDEV","_Fragment","children","map","el","index","name","fileName","_jsxFileName","lineNumber","columnNumber","src","companyLogo","_c","$RefreshReg$"],"sources":["/Users/kiranpanchal/Desktop/Coding/React/portfolio-app/src/Experience.js"],"sourcesContent":["export default function Experience(props){\n    let experince=props.content;\n    return(\n        <>\n        {\n            experince.map((el,index)=>(\n                <>\n                <p key={index}>{el.name}</p>\n                <img src={el.companyLogo}></img>\n                </>\n            ))\n        }\n        </>\n    )\n}"],"mappings":";;AAAA,eAAe,SAASA,UAAUA,CAACC,KAAK,EAAC;EACrC,IAAIC,SAAS,GAACD,KAAK,CAACE,OAAO;EAC3B,oBACIC,OAAA,CAAAC,SAAA;IAAAC,QAAA,EAEIJ,SAAS,CAACK,GAAG,CAAC,CAACC,EAAE,EAACC,KAAK,kBACnBL,OAAA,CAAAC,SAAA;MAAAC,QAAA,gBACAF,OAAA;QAAAE,QAAA,EAAgBE,EAAE,CAACE;MAAI,GAAfD,KAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CAAC,eAC5BV,OAAA;QAAKW,GAAG,EAAEP,EAAE,CAACQ;MAAY;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA,eAC9B,CACL;EAAC,gBAEJ,CAAC;AAEX;AAACG,EAAA,GAduBjB,UAAU;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}